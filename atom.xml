<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yvan blog</title>
  
  <subtitle>开心就好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-08T09:29:34.825Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yvan Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python排序算法之冒泡排序</title>
    <link href="http://yoursite.com/2018/05/08/Python%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    <id>http://yoursite.com/2018/05/08/Python排序算法之冒泡排序/</id>
    <published>2018-05-08T09:24:52.000Z</published>
    <updated>2018-05-08T09:29:34.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a><a href="https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/4602306?fr=aladdin" target="_blank" rel="noopener">冒泡排序</a></h2><p>顾名思义，冒泡排序直观的意思是气泡越大冒的越快，对应到我们的列表中就是数字最大的先选出来，然后依次进行。例如 list = [1,4,5,0,6],比较方式为：</p><p>　　相邻的两个数字先进行比较，也就是list[0]和list[1]，发现不是”&gt;”的关系，就继续比较list[1]和list[2]。。。依次进行，发现list[2]&gt;list[3]，就进行交换，所以走完第一次全列表比较得到新列表[1,4,0,5,6],然后每一次扫描得到的新列表如下：</p><p>　　第一次：[1,4,0,5,6]</p><p>　　第二次：[1,0,4,5,6]</p><p>　　第三次：[0,1,4,5,6]</p><p>　　第四次：[1,4,5,0,6]</p><h3 id="时间复杂度：O-n-2-需要进行的比较次数为第一轮-n-1，n-2…-1-总的比较次数为-n-n-1-2"><a href="#时间复杂度：O-n-2-需要进行的比较次数为第一轮-n-1，n-2…-1-总的比较次数为-n-n-1-2" class="headerlink" title="时间复杂度：O(n^2).  需要进行的比较次数为第一轮 n-1，n-2….1, 总的比较次数为 n*(n-1)/2"></a>时间复杂度：O(n^2).  需要进行的比较次数为第一轮 n-1，n-2….1, 总的比较次数为 n*(n-1)/2</h3><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(lists)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(lists)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(lists) - <span class="number">1</span>, i, <span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> lists[j - <span class="number">1</span>] &gt; lists[j]:</span><br><span class="line">                lists[j - <span class="number">1</span>], lists[j] = lists[j], lists[j - <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> lists</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F
      
    
    </summary>
    
      <category term="排序算法" scheme="http://yoursite.com/categories/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="排序算法" scheme="http://yoursite.com/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
      <category term="冒泡排序" scheme="http://yoursite.com/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
</feed>
